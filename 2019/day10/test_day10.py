from day10 import abs_gcd, integer_coords, solve_part_1
import pytest


@pytest.mark.parametrize(
    'x, y, expected',
    [(0, 0, 0),
     (12, 16, 4),
     (-12, -16, 4),
     (12, -16, 4),
     (-12, 16, 4),
     (11*13*17*23, 7*11*17*19*29, 11*17)])
def test_abs_gcd(x, y, expected):
    assert abs_gcd(x, y) == expected
    
    
@pytest.mark.parametrize(
    'x, y, expected',
    [((0, 0), (0, 3), [(0, 1), (0, 2)]),
     ((0, 0), (3, 0), [(1, 0), (2, 0)]),
     ((0, 0), (12, 16), [(3, 4), (6, 8), (9, 12)]),
     ((3, 4), (12, 16), [(6, 8), (9, 12)]),
     ((-3, 4), (-12, 16), [(-6, 8), (-9, 12)]),     
     ((-3, -4), (-12, -16), [(-6, -8), (-9, -12)]),
     ((0, 0), (5, 7), [])])
def test_integer_coords(x, y, expected):
    assert list(integer_coords(x, y)) == expected
    

test_data_1 = ('''.#..#
.....
#####
....#
...##''', 8)

test_data_2 = ('''......#.#.
#..#.#....
..#######.
.#.#.###..
.#..#.....
..#....#.#
#..#....#.
.##.#..###
##...#..#.
.#....####''', 33)

test_data_3 = ('''#.#...#.#.
.###....#.
.#....#...
##.#.#.#.#
....#.#.#.
.##..###.#
..#...##..
..##....##
......#...
.####.###.''', 35)

test_data_4 = ('''.#..##.###...#######
##.############..##.
.#.######.########.#
.###.#######.####.#.
#####.##.#.##.###.##
..#####..#.#########
####################
#.####....###.#.#.##
##.#################
#####.##.###..####..
..######..##.#######
####.##.####...##..#
.#####..#.######.###
##...#.##########...
#.##########.#######
.####.#.###.###.#.##
....##.##.###..#####
.#.#.###########.###
#.#.#.#####.####.###
###.##.####.##.#..##''', 210)

  
@pytest.mark.parametrize(
    'x, expected',
    [test_data_1, test_data_2, test_data_3, test_data_4])
def test_part_1(x, expected):
    assert solve_part_1(x) == expected
